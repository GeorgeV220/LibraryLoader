buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'kr.entree.spigradle' version '2.4.3'
    id 'io.freefair.lombok' version '6.6'
    id 'java'
    id 'jacoco'
    id 'idea'
}

apply from: "$rootDir/gradle/jacoco.gradle"
apply from: "$rootDir/gradle/publish.gradle"

if (project.hasProperty("local_script")) {
    apply from: file(local_script + "/build.local.gradle")
}

sourceCompatibility = 17
targetCompatibility = 17

ext {
    mcVersion = project.property("mcVersion")
}

group project.property("group")

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs += ["-parameters"]
    options.fork = true
    options.forkOptions.executable = 'javac'
}

archivesBaseName = project.property("pluginName")

repositories {
    mavenLocal()
    mavenCentral()
    papermc()
    bungeecord()
    codemc()
    maven { url = 'https://jitpack.io' }
    maven { url 'https://repo.georgev22.com/releases' }
}

dependencies {

    compileOnly "io.papermc.paper:paper-api:${mcVersion}-R0.1-SNAPSHOT"

    compileOnly 'org.apache.commons:commons-lang3:3.12.0'
    compileOnly 'com.google.guava:guava:31.1-jre'
    compileOnly 'org.jetbrains:annotations:23.0.0'

    testImplementation 'com.georgev22:api:7.3.0'
    testImplementation 'org.jetbrains:annotations:23.0.0'
    testImplementation 'commons-io:commons-io:2.11.0'
    testImplementation 'org.apache.logging.log4j:log4j-core:2.19.0'
    testImplementation 'org.yaml:snakeyaml:1.33'
    testImplementation 'commons-lang:commons-lang:2.6'
    testImplementation 'org.jline:jline:3.21.0'
    testImplementation 'net.minecrell:terminalconsoleappender:1.3.0'
    testImplementation 'org.jline:jline-terminal-jna:3.21.0'
    testImplementation 'net.java.dev.jna:jna:5.12.1'
    testImplementation 'org.apache.logging.log4j:log4j-jul:2.19.0'
    testImplementation 'com.lmax:disruptor:3.4.4'
}

shadowJar {
    classifier = ''
}

tasks.build.dependsOn(shadowJar)
tasks.publish.dependsOn(shadowJar)
tasks.prepareSpigotPlugins.dependsOn(shadowJar)
tasks.generateSpigotDescription.enabled = false
task testJar(type: Jar, dependsOn: testClasses) {
    classifier = 'test'
    manifest {
        attributes 'Manifest-Version': '1.0', 'Implementation-Title': 'xyz', 'Implementation-Version': version, 'Main-Class': 'com.georgev22.api.tests.Tests'
    }
    from sourceSets.test.output + sourceSets.main.output
}

test {
    useJUnitPlatform()
    testLogging {
        events "skipped", "failed"
    }
    ignoreFailures = false
}

processResources {
    project.properties.put("version", this.version)
    expand project.properties
}

defaultTasks 'build'
